import { OptionsTypeOrmGetAll, GetAllWithoutPagination, } from '@seidor-cloud-produtos/lib-seidor-common/dist/packages/typeorm/lib/interfaces';

import <%= props.nameCamelCaseUpperFirst %> from '../../database/entities/<%= props.nameCamelCaseUpperFirst %>';
import { <%= props.nameCamelCaseUpperFirst %>Interface } from '../<%= props.nameCamelCase %>';

export default interface I<%= props.nameCamelCaseUpperFirst %>Repository {
    createAndSave(
        <%= props.nameCamelCase %>Data: <%= props.nameCamelCaseUpperFirst %>Interface,
    ): Promise<<%= props.nameCamelCaseUpperFirst %>>;
    findById(id: string<% if (props.tenantid) { %>, tenantid: string<% }%>): Promise<<%= props.nameCamelCaseUpperFirst %> | undefined>;
    getAllWithPagination(
        options: OptionsTypeOrmGetAll,
    ): Promise<{ data: <%= props.nameCamelCaseUpperFirst %>[]; count: number }>;
    getAllWithoutPagination(options: GetAllWithoutPagination): Promise<<%= props.nameCamelCaseUpperFirst %>[]>;
}

